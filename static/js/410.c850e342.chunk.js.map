{"version":3,"file":"static/js/410.c850e342.chunk.js","mappings":"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","sources":["hooks/useUsers.js","components/Common/Header.jsx","utils/validation.js","components/Admin/AddUserModal.jsx","pages/UserListPage.jsx","components/Common/ErrorMessage.jsx","components/Common/SuccessMessage.jsx"],"sourcesContent":["import { useContext, useCallback } from 'react';\r\nimport { UsersContext } from '../context/UsersContext';\r\n\r\nexport const useUsers = () => {\r\n  const context = useContext(UsersContext);\r\n  if (!context) {\r\n    throw new Error('useUsers must be used within UsersProvider');\r\n  }\r\n\r\n  const { state, dispatch } = context;\r\n\r\n  const addUser = useCallback((userData) => {\r\n    dispatch({\r\n      type: 'ADD_USER',\r\n      payload: userData,\r\n    });\r\n  }, [dispatch]);\r\n\r\n  const updateUser = useCallback((userId, userData) => {\r\n    dispatch({\r\n      type: 'UPDATE_USER',\r\n      payload: { id: userId, ...userData },\r\n    });\r\n  }, [dispatch]);\r\n\r\n  const deleteUser = useCallback((userId) => {\r\n    dispatch({\r\n      type: 'DELETE_USER',\r\n      payload: userId,\r\n    });\r\n  }, [dispatch]);\r\n\r\n  return {\r\n    users: state.users,\r\n    currentUser: state.currentUser,\r\n    loading: state.loading,\r\n    error: state.error,\r\n    successMessage: state.successMessage,\r\n    addUser,\r\n    updateUser,\r\n    deleteUser,\r\n    dispatch,\r\n    state,\r\n  };\r\n};","import React, { memo } from 'react';\r\nimport { FaBell, FaHeadset, FaUser } from 'react-icons/fa6';\r\n\r\nconst Navbar = memo(({ onProfileClick = () => {}, onLogoClick = () => {} }) => {\r\n  const handleProfileClick = () => {\r\n    if (typeof onProfileClick === 'function') {\r\n      onProfileClick();\r\n    }\r\n  };\r\n\r\n  const handleLogoClick = () => {\r\n    if (typeof onLogoClick === 'function') {\r\n      onLogoClick();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <header className=\"bg-white border-b border-gray-200 sticky top-0 z-40\">\r\n      <div className=\"w-full px-8 py-3\">\r\n        <div className=\"flex justify-between items-center\">\r\n          {/* Logo Section - Clickable */}\r\n          <button \r\n            onClick={handleLogoClick}\r\n            className=\"flex items-center hover:opacity-70 transition-opacity\"\r\n            title=\"Go to Users list\"\r\n            aria-label=\"Go to Users list\"\r\n          >\r\n            <div className=\"w-9 h-9 border-2 border-gray-900 rounded flex items-center justify-center\">\r\n              <span className=\"text-xs font-bold text-gray-900\">LOGO</span>\r\n            </div>\r\n          </button>\r\n\r\n          {/* Icon Group - Right Side */}\r\n          <div className=\"flex items-center gap-8\">\r\n            {/* Help/Support Icon */}\r\n            <button \r\n              className=\"text-gray-700 hover:text-gray-900 transition-colors\"\r\n              title=\"Help & Support\"\r\n              aria-label=\"Help and Support\"\r\n            >\r\n              <FaHeadset size={18} />\r\n            </button>\r\n\r\n            {/* Notifications Icon */}\r\n            <button \r\n              className=\"text-gray-700 hover:text-gray-900 transition-colors relative\"\r\n              title=\"Notifications\"\r\n              aria-label=\"Notifications\"\r\n            >\r\n              <FaBell size={18} />\r\n            </button>\r\n\r\n            {/* User Profile Avatar */}\r\n            <button \r\n              onClick={handleProfileClick}\r\n              className=\"w-9 h-9 rounded-full bg-violet-50 text-violet-600 flex items-center justify-center hover:shadow-md transition-shadow\"\r\n              title=\"My Profile\"\r\n              aria-label=\"My Profile\"\r\n            >\r\n              <FaUser size={18} />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n});\r\n\r\nNavbar.displayName = 'Navbar';\r\n\r\nexport default Navbar;","export const validateEmail = (email) => {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  return emailRegex.test(email);\r\n};\r\n\r\nexport const validatePhoneNumber = (phone) => {\r\n  if (!phone) return true; // Optional field\r\n  const phoneRegex = /^[\\d\\s\\-\\+\\(\\)]+$/;\r\n  const digitsOnly = phone.replace(/\\D/g, '');\r\n  return phoneRegex.test(phone) && digitsOnly.length >= 10;\r\n};\r\n\r\nexport const validatePincode = (pincode) => {\r\n  if (!pincode) return true; // Optional field\r\n  const pincodeRegex = /^[0-9]{5,10}$/;\r\n  return pincodeRegex.test(pincode);\r\n};\r\n\r\nexport const validateYear = (year) => {\r\n  if (!year) return true; // Optional field\r\n  const yearNum = parseInt(year);\r\n  return yearNum >= 1900 && yearNum <= new Date().getFullYear();\r\n};\r\n\r\nexport const validateForm = (formData, requiredFields = []) => {\r\n  const errors = {};\r\n\r\n  requiredFields.forEach(field => {\r\n    if (!formData[field] || formData[field].toString().trim() === '') {\r\n      errors[field] = `${field.replace(/([A-Z])/g, ' $1')} is required`;\r\n    }\r\n  });\r\n\r\n  if (formData.email && !validateEmail(formData.email)) {\r\n    errors.email = 'Invalid email format';\r\n  }\r\n\r\n  if (formData.phoneNumber && !validatePhoneNumber(formData.phoneNumber)) {\r\n    errors.phoneNumber = 'Invalid phone number';\r\n  }\r\n\r\n  if (formData.alternatePhone && !validatePhoneNumber(formData.alternatePhone)) {\r\n    errors.alternatePhone = 'Invalid phone number';\r\n  }\r\n\r\n  if (formData.pincode && !validatePincode(formData.pincode)) {\r\n    errors.pincode = 'Invalid pincode';\r\n  }\r\n\r\n  if (formData.yearOfBirth && !validateYear(formData.yearOfBirth)) {\r\n    errors.yearOfBirth = 'Invalid year of birth';\r\n  }\r\n\r\n  return Object.keys(errors).length === 0 ? null : errors;\r\n};","import React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useUsers } from '../../hooks/useUsers';\r\nimport { validateEmail } from '../../utils/validation';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { IoClose } from 'react-icons/io5';\r\n\r\nconst AddUserModal = ({ isOpen, onClose }) => {\r\n  const { addUser } = useUsers();\r\n  const [loading, setLoading] = useState(false);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({\r\n    defaultValues: {\r\n      name: '',\r\n      email: '',\r\n      contact: '',\r\n    },\r\n  });\r\n\r\n  const onSubmit = (data) => {\r\n    setLoading(true);\r\n\r\n    // Simulate API delay\r\n    setTimeout(() => {\r\n      const newUser = {\r\n        id: uuidv4(),\r\n        firstName: data.name.split(' ')[0] || '',\r\n        lastName: data.name.split(' ').slice(1).join(' ') || '',\r\n        email: data.email,\r\n        phone: data.contact,\r\n        yearOfBirth: '',\r\n        gender: '',\r\n        countryCode: 'IN',\r\n        alternatePhone: '',\r\n        address: '',\r\n        pincode: '',\r\n        state: '',\r\n        countryCodeDomicile: 'IN',\r\n        school: '',\r\n        degree: '',\r\n        course: '',\r\n        yearOfCompletion: '',\r\n        grade: '',\r\n        skills: '',\r\n        projects: '',\r\n        workExperience: [],\r\n        linkedinUrl: '',\r\n        resume: '',\r\n      };\r\n\r\n      // Add user through context\r\n      addUser(newUser);\r\n\r\n      reset();\r\n      setLoading(false);\r\n      onClose();\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Overlay */}\r\n      {isOpen && (\r\n        <div\r\n          className=\"fixed inset-0 bg-black/50 z-40 transition-opacity duration-300\"\r\n          onClick={onClose}\r\n          aria-label=\"Close drawer\"\r\n        />\r\n      )}\r\n\r\n      {/* Side Drawer */}\r\n      <div\r\n        className={`fixed top-0 right-0 h-full w-full lg:w-1/2 bg-white shadow-lg z-50 transform transition-transform duration-300 ease-in-out flex flex-col ${\r\n          isOpen ? 'translate-x-0' : 'translate-x-full'\r\n        }`}\r\n      >\r\n        {/* Drawer Header */}\r\n        <div className=\"flex justify-between items-center border-b border-gray-200 p-6\">\r\n          <h2 className=\"text-lg font-semibold text-gray-900\">Add User</h2>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"text-gray-500 hover:text-gray-700 text-2xl transition-colors\"\r\n            aria-label=\"Close\"\r\n          >\r\n            <IoClose />\r\n          </button>\r\n        </div>\r\n\r\n        {/* Drawer Content */}\r\n        <div className=\"flex-1 overflow-y-auto p-6\">\r\n          {/* Form */}\r\n          <form onSubmit={handleSubmit(onSubmit)} className=\"flex flex-col gap-5\">\r\n            \r\n            {/* Row 1: Name of the user (Full Width) */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Name of the user\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                {...register('name', { required: 'Name is required' })}\r\n                className=\"w-full bg-white rounded-md border border-gray-300 px-3 py-2 text-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-violet-600\"\r\n                placeholder=\"Type here\"\r\n              />\r\n              {errors.name && (\r\n                <p className=\"text-red-500 text-xs mt-1\">{errors.name.message}</p>\r\n              )}\r\n            </div>\r\n\r\n            {/* Row 2: Email and Contact (2-Column Grid) */}\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              {/* Email Column */}\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  E-mail\r\n                </label>\r\n                <input\r\n                  type=\"email\"\r\n                  {...register('email', {\r\n                    required: 'Email is required',\r\n                    validate: (value) =>\r\n                      validateEmail(value) || 'Invalid email format',\r\n                  })}\r\n                  className=\"w-full bg-white rounded-md border border-gray-300 px-3 py-2 text-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-violet-600\"\r\n                  placeholder=\"Type here\"\r\n                />\r\n                {errors.email && (\r\n                  <p className=\"text-red-500 text-xs mt-1\">{errors.email.message}</p>\r\n                )}\r\n              </div>\r\n\r\n              {/* Contact Column */}\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Contact\r\n                </label>\r\n                <input\r\n                  type=\"tel\"\r\n                  {...register('contact', { required: 'Contact is required' })}\r\n                  className=\"w-full bg-white rounded-md border border-gray-300 px-3 py-2 text-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-violet-600\"\r\n                  placeholder=\"Type here\"\r\n                />\r\n                {errors.contact && (\r\n                  <p className=\"text-red-500 text-xs mt-1\">{errors.contact.message}</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        {/* Drawer Footer (Buttons) - Sticky at Bottom */}\r\n        <div className=\"border-t border-gray-200 p-6 flex gap-3 justify-end\">\r\n          {/* Cancel Button */}\r\n          <button\r\n            type=\"button\"\r\n            onClick={onClose}\r\n            className=\"px-6 py-2 bg-violet-100 text-violet-700 font-medium text-sm rounded-md hover:bg-violet-200 transition-colors disabled:opacity-50\"\r\n            disabled={loading}\r\n          >\r\n            Cancel\r\n          </button>\r\n\r\n          {/* Add Button */}\r\n          <button\r\n            type=\"submit\"\r\n            onClick={handleSubmit(onSubmit)}\r\n            className=\"px-6 py-2 bg-violet-600 text-white font-medium text-sm rounded-md hover:bg-violet-700 transition-colors disabled:opacity-50 flex items-center gap-2\"\r\n            disabled={loading}\r\n          >\r\n            {loading ? (\r\n              <>\r\n                <div className=\"animate-spin rounded-full h-4 w-4 border-2 border-white border-t-transparent\"></div>\r\n                Adding...\r\n              </>\r\n            ) : (\r\n              'Add'\r\n            )}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddUserModal;","import React, { memo, useMemo, useState } from 'react';\r\nimport { FaEye, FaTrash, FaPlus } from 'react-icons/fa6';\r\nimport Navbar from '../components/Common/Header';\r\nimport AddUserModal from '../components/Admin/AddUserModal';\r\nimport SuccessMessage from '../components/Common/SuccessMessage';\r\nimport ErrorMessage from '../components/Common/ErrorMessage';\r\nimport { useUsers } from '../hooks/useUsers';\r\n\r\nconst UserListPage = memo(({ onViewChange }) => {\r\n  const { state, deleteUser, dispatch } = useUsers();\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const userRows = useMemo(() => state.users, [state.users]);\r\n\r\n  const handleEditClick = (userId) => {\r\n    // Navigate to profile page with the user ID\r\n    onViewChange('profile', userId);\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  const handleDeleteClick = (userId) => {\r\n    if (window.confirm('Are you sure you want to delete this user?')) {\r\n      deleteUser(userId);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      {/* Navbar */}\r\n      <Navbar onProfileClick={() => onViewChange('profile')} />\r\n\r\n      {/* Success/Error Messages */}\r\n      {state.successMessage && (\r\n        <div className=\"fixed top-20 left-0 right-0 flex justify-center z-50 px-4\">\r\n          <SuccessMessage\r\n            message={state.successMessage}\r\n            onClose={() => dispatch({ type: 'CLEAR_MESSAGES' })}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {state.error && (\r\n        <div className=\"fixed top-20 left-0 right-0 flex justify-center z-50 px-4\">\r\n          <ErrorMessage\r\n            message={state.error}\r\n            onClose={() => dispatch({ type: 'CLEAR_MESSAGES' })}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {/* Main Content */}\r\n      <main className=\"max-w-full px-6 py-8\">\r\n        {/* Page Header */}\r\n        <div className=\"flex justify-between items-center mb-8\">\r\n          <h1 className=\"text-3xl font-bold text-gray-900\">Users</h1>\r\n          <button\r\n            onClick={() => setIsModalOpen(true)}\r\n            className=\"flex items-center gap-2 bg-purple-600 hover:bg-purple-700 text-white font-semibold py-2 px-4 rounded-lg transition-colors\"\r\n          >\r\n            <FaPlus size={16} />\r\n            Add User\r\n          </button>\r\n        </div>\r\n\r\n        {/* Users Table */}\r\n        <div className=\"bg-white rounded-lg shadow overflow-x-auto\">\r\n          <table className=\"w-full\">\r\n            <thead className=\"bg-gray-100 border-b border-gray-200\">\r\n              <tr>\r\n                <th className=\"px-6 py-3 text-left text-sm font-semibold text-gray-700\">Sr. No</th>\r\n                <th className=\"px-6 py-3 text-left text-sm font-semibold text-gray-700\">User name</th>\r\n                <th className=\"px-6 py-3 text-left text-sm font-semibold text-gray-700\">E-mail</th>\r\n                <th className=\"px-6 py-3 text-left text-sm font-semibold text-gray-700\">Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {userRows.length > 0 ? (\r\n                userRows.map((user, index) => (\r\n                  <tr key={user.id} className=\"border-b border-gray-200 hover:bg-gray-50 transition-colors\">\r\n                    <td className=\"px-6 py-4 text-sm text-gray-900\">{index + 1}</td>\r\n                    <td className=\"px-6 py-4 text-sm text-gray-900 font-medium\">{user.firstName} {user.lastName}</td>\r\n                    <td className=\"px-6 py-4 text-sm text-gray-600\">{user.email}</td>\r\n                    <td className=\"px-6 py-4 text-sm\">\r\n                      <div className=\"flex gap-4 justify-center items-center\">\r\n                        {/* Eye Icon - View User */}\r\n                        <button\r\n                          onClick={() => handleEditClick(user.id)}\r\n                          className=\"text-gray-500 hover:text-gray-700 transition-colors p-2 rounded-lg hover:bg-gray-100\"\r\n                          title=\"View user\"\r\n                          aria-label=\"View user\"\r\n                        >\r\n                          <FaEye size={20} />\r\n                        </button>\r\n\r\n                        {/* Trash Icon - Delete User */}\r\n                        <button\r\n                          onClick={() => handleDeleteClick(user.id)}\r\n                          className=\"text-gray-500 hover:text-gray-700 transition-colors p-2 rounded-lg hover:bg-gray-100\"\r\n                          title=\"Delete user\"\r\n                          aria-label=\"Delete user\"\r\n                        >\r\n                          <FaTrash size={20} />\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <tr>\r\n                  <td colSpan=\"4\" className=\"px-6 py-8 text-center text-gray-500\">\r\n                    No users found. Click \"Add User\" to create one.\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </main>\r\n\r\n      {/* Add User Modal */}\r\n      <AddUserModal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)} />\r\n    </div>\r\n  );\r\n});\r\n\r\nUserListPage.displayName = 'UserListPage';\r\n\r\nexport default UserListPage;\r\n","import React from 'react';\r\nimport { IoClose } from 'react-icons/io5';\r\n\r\nconst ErrorMessage = ({ message, onClose }) => {\r\n  return (\r\n    <div className=\"error-message animate-slideUp\">\r\n      <span>{message}</span>\r\n      <button\r\n        onClick={onClose}\r\n        className=\"text-red-700 hover:text-red-900 font-bold text-xl\"\r\n      >\r\n        <IoClose />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;","import React, { memo } from 'react';\r\nimport { IoClose } from 'react-icons/io5';\r\n\r\nconst SuccessMessage = memo(({ message, onClose }) => {\r\n  return (\r\n    <div className=\"success-message animate-slideUp\">\r\n      <span className=\"text-sm sm:text-base\">{message}</span>\r\n      <button\r\n        onClick={onClose}\r\n        className=\"text-green-700 hover:text-green-900 font-bold text-lg sm:text-xl ml-2\"\r\n      >\r\n        <IoClose />\r\n      </button>\r\n    </div>\r\n  );\r\n});\r\n\r\nSuccessMessage.displayName = 'SuccessMessage';\r\n\r\nexport default SuccessMessage;"],"names":["useUsers","context","useContext","UsersContext","Error","state","dispatch","addUser","useCallback","userData","type","payload","updateUser","userId","_objectSpread","id","deleteUser","users","currentUser","loading","error","successMessage","Navbar","memo","_ref","onProfileClick","onLogoClick","_jsx","className","children","_jsxs","onClick","handleLogoClick","title","FaHeadset","size","FaBell","handleProfileClick","FaUser","displayName","validateEmail","email","test","isOpen","onClose","setLoading","useState","register","handleSubmit","reset","formState","errors","useForm","defaultValues","name","contact","onSubmit","data","setTimeout","newUser","uuidv4","firstName","split","lastName","slice","join","phone","yearOfBirth","gender","countryCode","alternatePhone","address","pincode","countryCodeDomicile","school","degree","course","yearOfCompletion","grade","skills","projects","workExperience","linkedinUrl","resume","_Fragment","concat","IoClose","required","placeholder","message","validate","value","disabled","UserListPage","onViewChange","isModalOpen","setIsModalOpen","userRows","useMemo","SuccessMessage","ErrorMessage","FaPlus","length","map","user","index","handleEditClick","window","scrollTo","FaEye","handleDeleteClick","confirm","FaTrash","colSpan","AddUserModal"],"sourceRoot":""}